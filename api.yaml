openapi: 3.0.3
info:
  title: QueryOptimizer
  description: Business Logic service meant to short circuit queries already done.
  version: 1.0.0
servers:
  - url: https://query-optimizer/api/v1
paths:
  /:
    get:
      summary: Get result of query
      description: Given the parameters of a query return a pre-existing result, which can be built from different queries, or fail in case there is not enough data
      operationId: optimizeQuery
      parameters:
        - name: x
          in: query
          required: true
          schema:
            type: number
        - name: y
          in: query
          required: true
          schema:
            type: number
        - name: area
          in: query
          required: true
          schema:
            type: number
        - name: tags
          in: query
          description: Tags of the sitting spot
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Tag'
        - name: labels
          in: query
          description: Labels of the sitting spot
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: Result found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : '#/components/schemas/QueryResult'
        404:
          description: Not enough data to optimize query
components:
  schemas:
    Location:
      description: x,y coordinates
      properties:
        x:
          type: number
        y:
          type: number
    Area:
      description: An area with a location as center
      properties:
        center:
          $ref: '#/components/schemas/Location'
        range:
          type: number
    Tag:
      properties:
        key:
          type: string
        value:
          type: string
    Query:
      properties:
        area:
          $ref: '#/components/schemas/Area'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        labels:
          type: array
          items:
            type: string
    QueryResult:
      properties:
        spotId:
          type: string
        location:
          $ref: '#/components/schemas/Location'
